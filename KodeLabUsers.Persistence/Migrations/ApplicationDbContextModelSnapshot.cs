// <auto-generated />
using KodeLabUsers.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KodeLabUsers.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KodeLabUsers.Domain.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "Pmb",
                            Country = "ZA",
                            LineOne = "Home",
                            LineTwo = " Street",
                            PostCode = "3201"
                        },
                        new
                        {
                            AddressId = 2,
                            City = "Pmb",
                            Country = "ZA",
                            LineOne = "Home2",
                            LineTwo = " Street2",
                            PostCode = "3201"
                        },
                        new
                        {
                            AddressId = 3,
                            City = "Pmb",
                            Country = "ZA",
                            LineOne = "Home3",
                            LineTwo = " Street3",
                            PostCode = "3201"
                        });
                });

            modelBuilder.Entity("KodeLabUsers.Domain.Entities.UserDetails", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustId");

                    b.HasIndex("AddressId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            CustId = 1,
                            AddressId = 1,
                            Age = 25,
                            DateOfBirth = "1996",
                            Email = "marcellvanniekerk@gmail.com",
                            Firstname = "Marcell",
                            IdNumber = "12345678910",
                            Lastname = "Smith"
                        },
                        new
                        {
                            CustId = 2,
                            AddressId = 2,
                            Age = 25,
                            DateOfBirth = "1980",
                            Email = "johnnyA@gmail.com",
                            Firstname = "John",
                            IdNumber = "12345678911",
                            Lastname = "Snow"
                        },
                        new
                        {
                            CustId = 3,
                            AddressId = 3,
                            Age = 25,
                            DateOfBirth = "1997",
                            Email = "kevinSnow@gmail.com",
                            Firstname = "Kevin",
                            IdNumber = "12345678912",
                            Lastname = "Eleven"
                        });
                });

            modelBuilder.Entity("KodeLabUsers.Domain.Entities.UserDetails", b =>
                {
                    b.HasOne("KodeLabUsers.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
